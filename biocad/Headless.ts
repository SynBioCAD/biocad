
import { Graph, SBOL3GraphView } from "sbolgraph"
import LayoutThumbnail from "biocad/cad/LayoutThumbnail";
import Layout from "biocad/cad/Layout";
import { create } from "@biocad/jfw/vdom";
import BiocadApp from "biocad/BiocadApp";
import { Rect } from "@biocad/jfw/geom";

export default class Headless {

    app:BiocadApp

    constructor(app:BiocadApp) {
        this.app = app
    }

    async headlessLoad(url:string):Promise<string> {

        let str = await (await fetch(url)).text()

        return SBOL3GraphView.loadString(str).then((gv:SBOL3GraphView) => {

            const layout:Layout = new Layout(gv.graph)

            layout.syncAllDepictions(5)
            layout.configurate([])

            const layoutBBoxGrid:Rect|null = layout.getBoundingBox()

            if(!layoutBBoxGrid)
                return Promise.reject('???')

            const layoutBBox:Rect = layoutBBoxGrid.multiply(layout.gridSize).expand(16)

            const thumb:LayoutThumbnail = new LayoutThumbnail(this.app, layout)

            const d:Element = create(thumb.render())

            const out: string = [
                '<?xml version="1.0" encoding="iso-8859-1"?>',
                '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">',
                '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"',
                'width="' + layoutBBox.width() + 'px" height="' + layoutBBox.height() + 'px" ' +
                'viewBox="' + layoutBBox.topLeft.x + ' ' + layoutBBox.topLeft.y + ' ' + layoutBBox.width() + ' ' + layoutBBox.height() + '" xml:space="preserve">',

                '<title>' + 'Untitled Design' + '</title>',
                '<desc>Generated by biocad</desc>',

                d.innerHTML,

                '</svg>'
            ].join('\n')

            return Promise.resolve(out)

        })

    }

}
